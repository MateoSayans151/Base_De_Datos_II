# docker-compose.yml
# name: "Bases TPO"  # opcional

services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./init-redis.sh:/usr/local/bin/init-redis.sh:ro
    command: >
      sh -lc "
        redis-server --appendonly yes &
        sleep 3 &&
        sh /usr/local/bin/init-redis.sh || true &&
        wait"
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 3s
      retries: 10

  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./scriptMongo.js:/docker-entrypoint-initdb.d/scriptMongo.js:ro

    environment:
      MONGO_INITDB_DATABASE: tpo
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 5s
      timeout: 5s
      retries: 10

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: tpo
      MYSQL_DATABASE: tpo
      MYSQL_USER: tpo
      MYSQL_PASSWORD: tpo
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/scriptSQL.sql:ro
    command: ["--default-authentication-plugin=mysql_native_password"]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -ptpo --silent"]
      interval: 5s
      timeout: 5s
      retries: 10

  cassandra:
    image: cassandra:4.1
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: tpo-cluster
      CASSANDRA_NUM_TOKENS: 16
      MAX_HEAP_SIZE: 512M
      HEAP_NEWSIZE: 128M
    volumes:
      - cass-data:/var/lib/cassandra
      - ./scriptCass.cql:/scripts/scriptCass.cql:ro
    # Cassandra no auto-ejecuta scripts: la levantamos en bg, corremos el .cql y esperamos
    command: >
      sh -lc "
        docker-entrypoint.sh cassandra -f &
        echo 'Esperando Cassandra...' &&
        for i in $(seq 1 30); do
          cqlsh -e 'SHOW VERSION' 127.0.0.1 9042 && break || sleep 2
        done &&
        cqlsh -f /scripts/scriptCass.cql 127.0.0.1 9042 || true &&
        wait"
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SHOW VERSION' 127.0.0.1 9042 >/dev/null 2>&1"]
      interval: 15s
      timeout: 10s
      retries: 20


volumes:
  redis-data:
  mongo-data:
  mysql-data:
  cass-data:
